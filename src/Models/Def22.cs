// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Instantly.OpenApiClient.Models
{
    /// <summary>
    /// An enrichment can take different forms, such as email enrichment or LinkedIn enrichment. Leads may be imported from SuperSearch using the dedicated endpoint, or enriched directly within a list or campaign by attaching an enrichment to it.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Def22 : IParsable
    {
        /// <summary>Whether new leads added to the resource will be automatically enriched using these same settings</summary>
        public bool? AutoUpdate { get; set; }
        /// <summary>Enrichment payload</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Instantly.OpenApiClient.Models.Def22_enrichment_payload? EnrichmentPayload { get; set; }
#nullable restore
#else
        public global::Soenneker.Instantly.OpenApiClient.Models.Def22_enrichment_payload EnrichmentPayload { get; set; }
#endif
        /// <summary>Unique identifier for the enrichment</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; private set; }
#nullable restore
#else
        public string Id { get; private set; }
#endif
        /// <summary>Whether the enrichment is in progress</summary>
        public bool? InProgress { get; set; }
        /// <summary>The maximum number of leads to enrich</summary>
        public double? Limit { get; set; }
        /// <summary>Organization ID that created this enrichment</summary>
        public Guid? OrganizationId { get; private set; }
        /// <summary>Unique identifier for the entity to enrich leads into</summary>
        public Guid? ResourceId { get; private set; }
        /// <summary>Type of the entity to enrich leads into</summary>
        public double? ResourceType { get; private set; }
        /// <summary>Whether the fully enriched profile enrichment will run even if we don&apos;t find an email</summary>
        public bool? SkipRowsWithoutEmail { get; set; }
        /// <summary>Enrichment type to add to the resource</summary>
        public global::Soenneker.Instantly.OpenApiClient.Models.Def22_type? Type { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Instantly.OpenApiClient.Models.Def22"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Instantly.OpenApiClient.Models.Def22 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Instantly.OpenApiClient.Models.Def22();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "auto_update", n => { AutoUpdate = n.GetBoolValue(); } },
                { "enrichment_payload", n => { EnrichmentPayload = n.GetObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def22_enrichment_payload>(global::Soenneker.Instantly.OpenApiClient.Models.Def22_enrichment_payload.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "in_progress", n => { InProgress = n.GetBoolValue(); } },
                { "limit", n => { Limit = n.GetDoubleValue(); } },
                { "organization_id", n => { OrganizationId = n.GetGuidValue(); } },
                { "resource_id", n => { ResourceId = n.GetGuidValue(); } },
                { "resource_type", n => { ResourceType = n.GetDoubleValue(); } },
                { "skip_rows_without_email", n => { SkipRowsWithoutEmail = n.GetBoolValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Instantly.OpenApiClient.Models.Def22_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("auto_update", AutoUpdate);
            writer.WriteObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def22_enrichment_payload>("enrichment_payload", EnrichmentPayload);
            writer.WriteBoolValue("in_progress", InProgress);
            writer.WriteDoubleValue("limit", Limit);
            writer.WriteBoolValue("skip_rows_without_email", SkipRowsWithoutEmail);
            writer.WriteEnumValue<global::Soenneker.Instantly.OpenApiClient.Models.Def22_type>("type", Type);
        }
    }
}
#pragma warning restore CS0618
