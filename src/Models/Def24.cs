// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Instantly.OpenApiClient.Models
{
    /// <summary>
    /// A member of a workspace with associated user details
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Def24 : IParsable
    {
        /// <summary>Whether the member has accepted the workspace invitation</summary>
        public bool? Accepted { get; private set; }
        /// <summary>Email address of the workspace member</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>Unique identifier for the workspace member</summary>
        public Guid? Id { get; private set; }
        /// <summary>ID of the user who added this member to the workspace</summary>
        public Guid? IssuerId { get; private set; }
        /// <summary>THe role of the workspace member defining their access level. While the &quot;owner&quot; role is listed in the enum, it cannot be created via the API, and is only assigned to the user who creates the workspace.</summary>
        public global::Soenneker.Instantly.OpenApiClient.Models.Def24_role? Role { get; set; }
        /// <summary>Timestamp when the workspace member was created</summary>
        public DateTimeOffset? TimestampCreated { get; private set; }
        /// <summary>User ID of the workspace member</summary>
        public Guid? UserId { get; private set; }
        /// <summary>ID of the workspace this member belongs to</summary>
        public Guid? WorkspaceId { get; private set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Instantly.OpenApiClient.Models.Def24"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Instantly.OpenApiClient.Models.Def24 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Instantly.OpenApiClient.Models.Def24();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accepted", n => { Accepted = n.GetBoolValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "issuer_id", n => { IssuerId = n.GetGuidValue(); } },
                { "role", n => { Role = n.GetEnumValue<global::Soenneker.Instantly.OpenApiClient.Models.Def24_role>(); } },
                { "timestamp_created", n => { TimestampCreated = n.GetDateTimeOffsetValue(); } },
                { "user_id", n => { UserId = n.GetGuidValue(); } },
                { "workspace_id", n => { WorkspaceId = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("email", Email);
            writer.WriteEnumValue<global::Soenneker.Instantly.OpenApiClient.Models.Def24_role>("role", Role);
        }
    }
}
#pragma warning restore CS0618
