// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Instantly.OpenApiClient.Models
{
    /// <summary>
    /// Criteria that determine which leads are enriched
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Def21_search_filters : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The companyName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_companyName? CompanyName { get; set; }
#nullable restore
#else
        public global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_companyName CompanyName { get; set; }
#endif
        /// <summary>The department property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_department?>? Department { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_department?> Department { get; set; }
#endif
        /// <summary>The domains property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Domains { get; set; }
#nullable restore
#else
        public List<string> Domains { get; set; }
#endif
        /// <summary>The employeeCount property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_employeeCount?>? EmployeeCount { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_employeeCount?> EmployeeCount { get; set; }
#endif
        /// <summary>The fundingType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_fundingType?>? FundingType { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_fundingType?> FundingType { get; set; }
#endif
        /// <summary>The industry property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_industry? Industry { get; set; }
#nullable restore
#else
        public global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_industry Industry { get; set; }
#endif
        /// <summary>The keywordFilter property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_keywordFilter? KeywordFilter { get; set; }
#nullable restore
#else
        public global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_keywordFilter KeywordFilter { get; set; }
#endif
        /// <summary>The level property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_level?>? Level { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_level?> Level { get; set; }
#endif
        /// <summary>The locations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters.Def21_search_filters_locations>? Locations { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters.Def21_search_filters_locations> Locations { get; set; }
#endif
        /// <summary>If set, the lead finder will find companies that are similar to the look-alike domain</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LookAlike { get; set; }
#nullable restore
#else
        public string LookAlike { get; set; }
#endif
        /// <summary>Names of the lead to include in the search</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Name { get; set; }
#nullable restore
#else
        public List<string> Name { get; set; }
#endif
        /// <summary>The news property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_news?>? News { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_news?> News { get; set; }
#endif
        /// <summary>The revenue property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_revenue?>? Revenue { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_revenue?> Revenue { get; set; }
#endif
        /// <summary>If set, the lead finder will show only one lead per company</summary>
        public bool? ShowOneLeadPerCompany { get; set; }
        /// <summary>If set, the lead finder will skip leads that are owned by the user</summary>
        public bool? SkipOwnedLeads { get; set; }
        /// <summary>The title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_title? Title { get; set; }
#nullable restore
#else
        public global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_title Title { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters"/> and sets the default values.
        /// </summary>
        public Def21_search_filters()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "companyName", n => { CompanyName = n.GetObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_companyName>(global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_companyName.CreateFromDiscriminatorValue); } },
                { "department", n => { Department = n.GetCollectionOfEnumValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_department>()?.AsList(); } },
                { "domains", n => { Domains = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "employeeCount", n => { EmployeeCount = n.GetCollectionOfEnumValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_employeeCount>()?.AsList(); } },
                { "fundingType", n => { FundingType = n.GetCollectionOfEnumValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_fundingType>()?.AsList(); } },
                { "industry", n => { Industry = n.GetObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_industry>(global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_industry.CreateFromDiscriminatorValue); } },
                { "keywordFilter", n => { KeywordFilter = n.GetObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_keywordFilter>(global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_keywordFilter.CreateFromDiscriminatorValue); } },
                { "level", n => { Level = n.GetCollectionOfEnumValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_level>()?.AsList(); } },
                { "locations", n => { Locations = n.GetCollectionOfObjectValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters.Def21_search_filters_locations>(global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters.Def21_search_filters_locations.CreateFromDiscriminatorValue)?.AsList(); } },
                { "lookAlike", n => { LookAlike = n.GetStringValue(); } },
                { "name", n => { Name = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "news", n => { News = n.GetCollectionOfEnumValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_news>()?.AsList(); } },
                { "revenue", n => { Revenue = n.GetCollectionOfEnumValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_revenue>()?.AsList(); } },
                { "showOneLeadPerCompany", n => { ShowOneLeadPerCompany = n.GetBoolValue(); } },
                { "skipOwnedLeads", n => { SkipOwnedLeads = n.GetBoolValue(); } },
                { "title", n => { Title = n.GetObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_title>(global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_title.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_companyName>("companyName", CompanyName);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_department>("department", Department);
            writer.WriteCollectionOfPrimitiveValues<string>("domains", Domains);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_employeeCount>("employeeCount", EmployeeCount);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_fundingType>("fundingType", FundingType);
            writer.WriteObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_industry>("industry", Industry);
            writer.WriteObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_keywordFilter>("keywordFilter", KeywordFilter);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_level>("level", Level);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters.Def21_search_filters_locations>("locations", Locations);
            writer.WriteStringValue("lookAlike", LookAlike);
            writer.WriteCollectionOfPrimitiveValues<string>("name", Name);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_news>("news", News);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_revenue>("revenue", Revenue);
            writer.WriteBoolValue("showOneLeadPerCompany", ShowOneLeadPerCompany);
            writer.WriteBoolValue("skipOwnedLeads", SkipOwnedLeads);
            writer.WriteObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_title>("title", Title);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_locationsMember1"/>, <see cref="global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_locationsMember2"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Def21_search_filters_locations : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_locationsMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_locationsMember1? Def21SearchFiltersLocationsMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_locationsMember1 Def21SearchFiltersLocationsMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_locationsMember2"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_locationsMember2? Def21SearchFiltersLocationsMember2 { get; set; }
#nullable restore
#else
            public global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_locationsMember2 Def21SearchFiltersLocationsMember2 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters.Def21_search_filters_locations"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters.Def21_search_filters_locations CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters.Def21_search_filters_locations();
                if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Def21SearchFiltersLocationsMember1 = new global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_locationsMember1();
                }
                else if("".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.Def21SearchFiltersLocationsMember2 = new global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_locationsMember2();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Def21SearchFiltersLocationsMember1 != null)
                {
                    return Def21SearchFiltersLocationsMember1.GetFieldDeserializers();
                }
                else if(Def21SearchFiltersLocationsMember2 != null)
                {
                    return Def21SearchFiltersLocationsMember2.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Def21SearchFiltersLocationsMember1 != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_locationsMember1>(null, Def21SearchFiltersLocationsMember1);
                }
                else if(Def21SearchFiltersLocationsMember2 != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def21_search_filters_locationsMember2>(null, Def21SearchFiltersLocationsMember2);
                }
            }
        }
    }
}
#pragma warning restore CS0618
