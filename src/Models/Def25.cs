// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Instantly.OpenApiClient.Models
{
    /// <summary>
    /// A subsequence entity representing a follow-up sequence
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Def25 : IParsable
    {
        /// <summary>Conditions that trigger the subsequence</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Instantly.OpenApiClient.Models.Def25_conditions? Conditions { get; set; }
#nullable restore
#else
        public global::Soenneker.Instantly.OpenApiClient.Models.Def25_conditions Conditions { get; set; }
#endif
        /// <summary>Unique identifier for the subsequence</summary>
        public Guid? Id { get; private set; }
        /// <summary>Name of the subsequence</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>ID of the parent campaign</summary>
        public Guid? ParentCampaign { get; set; }
        /// <summary>List of sequences (the actual email copy). Even though this field is an array, only the first element is used, so please provide only one array item, and add the steps to that array</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def25_sequences>? Sequences { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Instantly.OpenApiClient.Models.Def25_sequences> Sequences { get; set; }
#endif
        /// <summary>Status of the subsequence</summary>
        public double? Status { get; private set; }
        /// <summary>Schedule configuration for the subsequence</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Instantly.OpenApiClient.Models.Def25_subsequence_schedule? SubsequenceSchedule { get; set; }
#nullable restore
#else
        public global::Soenneker.Instantly.OpenApiClient.Models.Def25_subsequence_schedule SubsequenceSchedule { get; set; }
#endif
        /// <summary>Timestamp when the subsequence was created</summary>
        public DateTimeOffset? TimestampCreated { get; private set; }
        /// <summary>Timestamp when the leads were last updated</summary>
        public DateTimeOffset? TimestampLeadsUpdated { get; private set; }
        /// <summary>ID of the workspace this subsequence belongs to</summary>
        public Guid? Workspace { get; private set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Instantly.OpenApiClient.Models.Def25"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Instantly.OpenApiClient.Models.Def25 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Instantly.OpenApiClient.Models.Def25();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "conditions", n => { Conditions = n.GetObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def25_conditions>(global::Soenneker.Instantly.OpenApiClient.Models.Def25_conditions.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "parent_campaign", n => { ParentCampaign = n.GetGuidValue(); } },
                { "sequences", n => { Sequences = n.GetCollectionOfObjectValues<global::Soenneker.Instantly.OpenApiClient.Models.Def25_sequences>(global::Soenneker.Instantly.OpenApiClient.Models.Def25_sequences.CreateFromDiscriminatorValue)?.AsList(); } },
                { "status", n => { Status = n.GetDoubleValue(); } },
                { "subsequence_schedule", n => { SubsequenceSchedule = n.GetObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def25_subsequence_schedule>(global::Soenneker.Instantly.OpenApiClient.Models.Def25_subsequence_schedule.CreateFromDiscriminatorValue); } },
                { "timestamp_created", n => { TimestampCreated = n.GetDateTimeOffsetValue(); } },
                { "timestamp_leads_updated", n => { TimestampLeadsUpdated = n.GetDateTimeOffsetValue(); } },
                { "workspace", n => { Workspace = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def25_conditions>("conditions", Conditions);
            writer.WriteStringValue("name", Name);
            writer.WriteGuidValue("parent_campaign", ParentCampaign);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Instantly.OpenApiClient.Models.Def25_sequences>("sequences", Sequences);
            writer.WriteObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def25_subsequence_schedule>("subsequence_schedule", SubsequenceSchedule);
        }
    }
}
#pragma warning restore CS0618
