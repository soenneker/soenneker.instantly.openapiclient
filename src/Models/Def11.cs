// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Instantly.OpenApiClient.Models
{
    /// <summary>
    /// A lead entity representing an individual lead
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Def11 : IParsable
    {
        /// <summary>ID of the user assigned to the lead</summary>
        public Guid? AssignedTo { get; set; }
        /// <summary>Campaign ID associated with the lead</summary>
        public Guid? Campaign { get; set; }
        /// <summary>Company domain of the lead</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyDomain { get; private set; }
#nullable restore
#else
        public string CompanyDomain { get; private set; }
#endif
        /// <summary>Company name of the lead</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyName { get; set; }
#nullable restore
#else
        public string CompanyName { get; set; }
#endif
        /// <summary>Email address of the lead</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>Number of times the email was clicked</summary>
        public double? EmailClickCount { get; private set; }
        /// <summary>Last email step the lead has clicked</summary>
        public double? EmailClickedStep { get; private set; }
        /// <summary>Last step variant the lead has clicked</summary>
        public double? EmailClickedVariant { get; private set; }
        /// <summary>Number of times the email was opened</summary>
        public double? EmailOpenCount { get; private set; }
        /// <summary>Last email step opened by the lead</summary>
        public double? EmailOpenedStep { get; private set; }
        /// <summary>Last step variant opened by the lead</summary>
        public double? EmailOpenedVariant { get; private set; }
        /// <summary>Last email step the lead has replied to</summary>
        public double? EmailRepliedStep { get; private set; }
        /// <summary>Last step variant the lead has replied to</summary>
        public double? EmailRepliedVariant { get; private set; }
        /// <summary>Number of times the email was replied to</summary>
        public double? EmailReplyCount { get; private set; }
        /// <summary>Enrichment status of the lead</summary>
        public double? EnrichmentStatus { get; private set; }
        /// <summary>ESP code associated with the lead</summary>
        public double? EspCode { get; private set; }
        /// <summary>First name of the lead</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>Unique identifier for the lead</summary>
        public Guid? Id { get; private set; }
        /// <summary>Indicates if the lead is a website visitor</summary>
        public bool? IsWebsiteVisitor { get; private set; }
        /// <summary>Source of the last contact</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastContactedFrom { get; private set; }
#nullable restore
#else
        public string LastContactedFrom { get; private set; }
#endif
        /// <summary>Last name of the lead</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>Source of the last step</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastStepFrom { get; private set; }
#nullable restore
#else
        public string LastStepFrom { get; private set; }
#endif
        /// <summary>ID of the last step</summary>
        public Guid? LastStepId { get; private set; }
        /// <summary>Timestamp when the last step was executed</summary>
        public DateTimeOffset? LastStepTimestampExecuted { get; private set; }
        /// <summary>List ID associated with the lead</summary>
        public Guid? ListId { get; set; }
        /// <summary>Lead interest status. It can be either a static value (check below), or a custom status interest value</summary>
        public double? LtInterestStatus { get; set; }
        /// <summary>Organization ID associated with the lead</summary>
        public Guid? Organization { get; private set; }
        /// <summary>Lead custom variables. This object can contain any key, but the values have to be of type string, number, boolean, or null. We do NOT allow objects or arrays as values.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Instantly.OpenApiClient.Models.Def11_payload? Payload { get; private set; }
#nullable restore
#else
        public global::Soenneker.Instantly.OpenApiClient.Models.Def11_payload Payload { get; private set; }
#endif
        /// <summary>Personalization of the lead</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Personalization { get; set; }
#nullable restore
#else
        public string Personalization { get; set; }
#endif
        /// <summary>Phone number of the lead</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Phone { get; set; }
#nullable restore
#else
        public string Phone { get; set; }
#endif
        /// <summary>Potential value of the lead</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PlValueLead { get; set; }
#nullable restore
#else
        public string PlValueLead { get; set; }
#endif
        /// <summary>Status of the lead</summary>
        public double? Status { get; private set; }
        /// <summary>Status summary of the lead</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Instantly.OpenApiClient.Models.Def11_status_summary? StatusSummary { get; private set; }
#nullable restore
#else
        public global::Soenneker.Instantly.OpenApiClient.Models.Def11_status_summary StatusSummary { get; private set; }
#endif
        /// <summary>Subsequence status summary of the lead</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Instantly.OpenApiClient.Models.Def11_status_summary_subseq? StatusSummarySubseq { get; private set; }
#nullable restore
#else
        public global::Soenneker.Instantly.OpenApiClient.Models.Def11_status_summary_subseq StatusSummarySubseq { get; private set; }
#endif
        /// <summary>ID of the subsequence</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubsequenceId { get; private set; }
#nullable restore
#else
        public string SubsequenceId { get; private set; }
#endif
        /// <summary>Timestamp when the lead was added to the subsequence</summary>
        public DateTimeOffset? TimestampAddedSubsequence { get; private set; }
        /// <summary>Timestamp when the lead was created</summary>
        public DateTimeOffset? TimestampCreated { get; private set; }
        /// <summary>Timestamp of the last email click</summary>
        public DateTimeOffset? TimestampLastClick { get; private set; }
        /// <summary>Timestamp of the last contact with the lead</summary>
        public DateTimeOffset? TimestampLastContact { get; private set; }
        /// <summary>Timestamp of the last interest status change</summary>
        public DateTimeOffset? TimestampLastInterestChange { get; private set; }
        /// <summary>Timestamp of the last email open</summary>
        public DateTimeOffset? TimestampLastOpen { get; private set; }
        /// <summary>Timestamp of the last email reply</summary>
        public DateTimeOffset? TimestampLastReply { get; private set; }
        /// <summary>Timestamp of the last touch with the lead</summary>
        public DateTimeOffset? TimestampLastTouch { get; private set; }
        /// <summary>Timestamp when the lead was last updated</summary>
        public DateTimeOffset? TimestampUpdated { get; private set; }
        /// <summary>ID of the user who uploaded the lead</summary>
        public Guid? UploadedByUser { get; private set; }
        /// <summary>Method used to upload the lead</summary>
        public global::Soenneker.Instantly.OpenApiClient.Models.Def11_upload_method? UploadMethod { get; private set; }
        /// <summary>Verification status of the lead</summary>
        public double? VerificationStatus { get; private set; }
        /// <summary>Website of the lead</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Website { get; set; }
#nullable restore
#else
        public string Website { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Instantly.OpenApiClient.Models.Def11"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Instantly.OpenApiClient.Models.Def11 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Instantly.OpenApiClient.Models.Def11();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "assigned_to", n => { AssignedTo = n.GetGuidValue(); } },
                { "campaign", n => { Campaign = n.GetGuidValue(); } },
                { "company_domain", n => { CompanyDomain = n.GetStringValue(); } },
                { "company_name", n => { CompanyName = n.GetStringValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "email_click_count", n => { EmailClickCount = n.GetDoubleValue(); } },
                { "email_clicked_step", n => { EmailClickedStep = n.GetDoubleValue(); } },
                { "email_clicked_variant", n => { EmailClickedVariant = n.GetDoubleValue(); } },
                { "email_open_count", n => { EmailOpenCount = n.GetDoubleValue(); } },
                { "email_opened_step", n => { EmailOpenedStep = n.GetDoubleValue(); } },
                { "email_opened_variant", n => { EmailOpenedVariant = n.GetDoubleValue(); } },
                { "email_replied_step", n => { EmailRepliedStep = n.GetDoubleValue(); } },
                { "email_replied_variant", n => { EmailRepliedVariant = n.GetDoubleValue(); } },
                { "email_reply_count", n => { EmailReplyCount = n.GetDoubleValue(); } },
                { "enrichment_status", n => { EnrichmentStatus = n.GetDoubleValue(); } },
                { "esp_code", n => { EspCode = n.GetDoubleValue(); } },
                { "first_name", n => { FirstName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "is_website_visitor", n => { IsWebsiteVisitor = n.GetBoolValue(); } },
                { "last_contacted_from", n => { LastContactedFrom = n.GetStringValue(); } },
                { "last_name", n => { LastName = n.GetStringValue(); } },
                { "last_step_from", n => { LastStepFrom = n.GetStringValue(); } },
                { "last_step_id", n => { LastStepId = n.GetGuidValue(); } },
                { "last_step_timestamp_executed", n => { LastStepTimestampExecuted = n.GetDateTimeOffsetValue(); } },
                { "list_id", n => { ListId = n.GetGuidValue(); } },
                { "lt_interest_status", n => { LtInterestStatus = n.GetDoubleValue(); } },
                { "organization", n => { Organization = n.GetGuidValue(); } },
                { "payload", n => { Payload = n.GetObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def11_payload>(global::Soenneker.Instantly.OpenApiClient.Models.Def11_payload.CreateFromDiscriminatorValue); } },
                { "personalization", n => { Personalization = n.GetStringValue(); } },
                { "phone", n => { Phone = n.GetStringValue(); } },
                { "pl_value_lead", n => { PlValueLead = n.GetStringValue(); } },
                { "status", n => { Status = n.GetDoubleValue(); } },
                { "status_summary", n => { StatusSummary = n.GetObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def11_status_summary>(global::Soenneker.Instantly.OpenApiClient.Models.Def11_status_summary.CreateFromDiscriminatorValue); } },
                { "status_summary_subseq", n => { StatusSummarySubseq = n.GetObjectValue<global::Soenneker.Instantly.OpenApiClient.Models.Def11_status_summary_subseq>(global::Soenneker.Instantly.OpenApiClient.Models.Def11_status_summary_subseq.CreateFromDiscriminatorValue); } },
                { "subsequence_id", n => { SubsequenceId = n.GetStringValue(); } },
                { "timestamp_added_subsequence", n => { TimestampAddedSubsequence = n.GetDateTimeOffsetValue(); } },
                { "timestamp_created", n => { TimestampCreated = n.GetDateTimeOffsetValue(); } },
                { "timestamp_last_click", n => { TimestampLastClick = n.GetDateTimeOffsetValue(); } },
                { "timestamp_last_contact", n => { TimestampLastContact = n.GetDateTimeOffsetValue(); } },
                { "timestamp_last_interest_change", n => { TimestampLastInterestChange = n.GetDateTimeOffsetValue(); } },
                { "timestamp_last_open", n => { TimestampLastOpen = n.GetDateTimeOffsetValue(); } },
                { "timestamp_last_reply", n => { TimestampLastReply = n.GetDateTimeOffsetValue(); } },
                { "timestamp_last_touch", n => { TimestampLastTouch = n.GetDateTimeOffsetValue(); } },
                { "timestamp_updated", n => { TimestampUpdated = n.GetDateTimeOffsetValue(); } },
                { "upload_method", n => { UploadMethod = n.GetEnumValue<global::Soenneker.Instantly.OpenApiClient.Models.Def11_upload_method>(); } },
                { "uploaded_by_user", n => { UploadedByUser = n.GetGuidValue(); } },
                { "verification_status", n => { VerificationStatus = n.GetDoubleValue(); } },
                { "website", n => { Website = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("assigned_to", AssignedTo);
            writer.WriteGuidValue("campaign", Campaign);
            writer.WriteStringValue("company_name", CompanyName);
            writer.WriteStringValue("email", Email);
            writer.WriteStringValue("first_name", FirstName);
            writer.WriteStringValue("last_name", LastName);
            writer.WriteGuidValue("list_id", ListId);
            writer.WriteDoubleValue("lt_interest_status", LtInterestStatus);
            writer.WriteStringValue("personalization", Personalization);
            writer.WriteStringValue("phone", Phone);
            writer.WriteStringValue("pl_value_lead", PlValueLead);
            writer.WriteStringValue("website", Website);
        }
    }
}
#pragma warning restore CS0618
