// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview
{
    /// <summary>
    /// Builds and executes requests for operations under \api\v2\campaigns\analytics\overview
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class OverviewRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OverviewRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/v2/campaigns/analytics/overview{?campaign_status*,end_date*,id*,ids*,start_date*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OverviewRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/v2/campaigns/analytics/overview{?campaign_status*,end_date*,id*,ids*,start_date*}", rawUrl)
        {
        }
        /// <summary>
        /// Get analytics overview for one or multiple campaigns. Specify the `id` field to get the analytics overview for a single campaign, or leave it empty to get the analytics overview for all campaigns
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewGetResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview400Error">When receiving a 400 status code</exception>
        /// <exception cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview401Error">When receiving a 401 status code</exception>
        /// <exception cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview404Error">When receiving a 404 status code</exception>
        /// <exception cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview429Error">When receiving a 429 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewGetResponse?> GetAsOverviewGetResponseAsync(Action<RequestConfiguration<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewRequestBuilder.OverviewRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewGetResponse> GetAsOverviewGetResponseAsync(Action<RequestConfiguration<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewRequestBuilder.OverviewRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview400Error.CreateFromDiscriminatorValue },
                { "401", global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview401Error.CreateFromDiscriminatorValue },
                { "404", global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview404Error.CreateFromDiscriminatorValue },
                { "429", global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview429Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewGetResponse>(requestInfo, global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewGetResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Get analytics overview for one or multiple campaigns. Specify the `id` field to get the analytics overview for a single campaign, or leave it empty to get the analytics overview for all campaigns
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview400Error">When receiving a 400 status code</exception>
        /// <exception cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview401Error">When receiving a 401 status code</exception>
        /// <exception cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview404Error">When receiving a 404 status code</exception>
        /// <exception cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview429Error">When receiving a 429 status code</exception>
        [Obsolete("This method is obsolete. Use GetAsOverviewGetResponseAsync instead.")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewResponse?> GetAsync(Action<RequestConfiguration<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewRequestBuilder.OverviewRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewResponse> GetAsync(Action<RequestConfiguration<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewRequestBuilder.OverviewRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview400Error.CreateFromDiscriminatorValue },
                { "401", global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview401Error.CreateFromDiscriminatorValue },
                { "404", global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview404Error.CreateFromDiscriminatorValue },
                { "429", global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.Overview429Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewResponse>(requestInfo, global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Get analytics overview for one or multiple campaigns. Specify the `id` field to get the analytics overview for a single campaign, or leave it empty to get the analytics overview for all campaigns
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewRequestBuilder.OverviewRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewRequestBuilder.OverviewRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Get analytics overview for one or multiple campaigns. Specify the `id` field to get the analytics overview for a single campaign, or leave it empty to get the analytics overview for all campaigns
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OverviewRequestBuilderGetQueryParameters 
        {
            /// <summary>Filter by campaign status (only the analytics for the campaigns with the specified status will be returned)</summary>
            [QueryParameter("campaign_status")]
            public double? CampaignStatus { get; set; }
            /// <summary>End date</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("end_date")]
            public string? EndDate { get; set; }
#nullable restore
#else
            [QueryParameter("end_date")]
            public string EndDate { get; set; }
#endif
            /// <summary>A campaign ID to get the analytics overview for. Leave this field empty to get the analytics overview for all campaigns</summary>
            [QueryParameter("id")]
            public Guid? Id { get; set; }
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("ids")]
            public Guid?[]? Ids { get; set; }
#nullable restore
#else
            [QueryParameter("ids")]
            public Guid?[] Ids { get; set; }
#endif
            /// <summary>Start date</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("start_date")]
            public string? StartDate { get; set; }
#nullable restore
#else
            [QueryParameter("start_date")]
            public string StartDate { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class OverviewRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Soenneker.Instantly.OpenApiClient.Api.V2.Campaigns.Analytics.Overview.OverviewRequestBuilder.OverviewRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
