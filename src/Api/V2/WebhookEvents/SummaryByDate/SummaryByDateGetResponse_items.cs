// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Instantly.OpenApiClient.Api.V2.WebhookEvents.SummaryByDate
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SummaryByDateGetResponse_items : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Date of the webhook event</summary>
        public Date? Date { get; set; }
        /// <summary>Total number of failed webhook events</summary>
        public double? FailedEvents { get; set; }
        /// <summary>Total number of successful webhook events</summary>
        public double? SuccessfulEvents { get; set; }
        /// <summary>Success rate of the webhook events</summary>
        public double? SuccessRate { get; set; }
        /// <summary>Total number of webhook events</summary>
        public double? TotalEvents { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.WebhookEvents.SummaryByDate.SummaryByDateGetResponse_items"/> and sets the default values.
        /// </summary>
        public SummaryByDateGetResponse_items()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.WebhookEvents.SummaryByDate.SummaryByDateGetResponse_items"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Instantly.OpenApiClient.Api.V2.WebhookEvents.SummaryByDate.SummaryByDateGetResponse_items CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Instantly.OpenApiClient.Api.V2.WebhookEvents.SummaryByDate.SummaryByDateGetResponse_items();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "date", n => { Date = n.GetDateValue(); } },
                { "failed_events", n => { FailedEvents = n.GetDoubleValue(); } },
                { "success_rate", n => { SuccessRate = n.GetDoubleValue(); } },
                { "successful_events", n => { SuccessfulEvents = n.GetDoubleValue(); } },
                { "total_events", n => { TotalEvents = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDateValue("date", Date);
            writer.WriteDoubleValue("failed_events", FailedEvents);
            writer.WriteDoubleValue("successful_events", SuccessfulEvents);
            writer.WriteDoubleValue("success_rate", SuccessRate);
            writer.WriteDoubleValue("total_events", TotalEvents);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
