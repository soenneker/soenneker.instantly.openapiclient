// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ListPostRequestBody : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Campaign ID to filter leads</summary>
        public Guid? Campaign { get; set; }
        /// <summary>Array of emails the leads needs to have</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Contacts { get; set; }
#nullable restore
#else
        public List<string> Contacts { get; set; }
#endif
        /// <summary>Whether to return distinct contacts</summary>
        public bool? DistinctContacts { get; set; }
        /// <summary>Enrichment status to filter leads</summary>
        public double? EnrichmentStatus { get; set; }
        /// <summary>ESG code to filter leads</summary>
        public global::Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List.ListPostRequestBody_esg_code? EsgCode { get; set; }
        /// <summary>Array of lead IDs to exclude</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? ExcludedIds { get; set; }
#nullable restore
#else
        public List<Guid?> ExcludedIds { get; set; }
#endif
        /// <summary>Filter criteria for leads. For custom lead labels, use the `interest_status` field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Filter { get; set; }
#nullable restore
#else
        public string Filter { get; set; }
#endif
        /// <summary>Array of lead IDs to include</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? Ids { get; set; }
#nullable restore
#else
        public List<Guid?> Ids { get; set; }
#endif
        /// <summary>Whether the lead is in a campaign</summary>
        public bool? InCampaign { get; set; }
        /// <summary>Whether the lead is in a list</summary>
        public bool? InList { get; set; }
        /// <summary>Whether the lead is a website visitor</summary>
        public bool? IsWebsiteVisitor { get; set; }
        /// <summary>The number of items to return</summary>
        public int? Limit { get; set; }
        /// <summary>List ID to filter leads</summary>
        public Guid? ListId { get; set; }
        /// <summary>Array of organization user IDs to filter leads</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? OrganizationUserIds { get; set; }
#nullable restore
#else
        public List<Guid?> OrganizationUserIds { get; set; }
#endif
        /// <summary>The queries property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List.ListPostRequestBody_queries>? Queries { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List.ListPostRequestBody_queries> Queries { get; set; }
#endif
        /// <summary>A search string to search the leads against - can be First Name, Last Name, or Email</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Search { get; set; }
#nullable restore
#else
        public string Search { get; set; }
#endif
        /// <summary>Smart view ID to filter leads</summary>
        public Guid? SmartViewId { get; set; }
        /// <summary>Forward pagination cursor. When distinct_contacts is false, provide the `id` value from the last lead of the previous page; when true, provide the lead&apos;s email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartingAfter { get; set; }
#nullable restore
#else
        public string StartingAfter { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List.ListPostRequestBody"/> and sets the default values.
        /// </summary>
        public ListPostRequestBody()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List.ListPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List.ListPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List.ListPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "campaign", n => { Campaign = n.GetGuidValue(); } },
                { "contacts", n => { Contacts = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "distinct_contacts", n => { DistinctContacts = n.GetBoolValue(); } },
                { "enrichment_status", n => { EnrichmentStatus = n.GetDoubleValue(); } },
                { "esg_code", n => { EsgCode = n.GetEnumValue<global::Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List.ListPostRequestBody_esg_code>(); } },
                { "excluded_ids", n => { ExcludedIds = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "filter", n => { Filter = n.GetStringValue(); } },
                { "ids", n => { Ids = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "in_campaign", n => { InCampaign = n.GetBoolValue(); } },
                { "in_list", n => { InList = n.GetBoolValue(); } },
                { "is_website_visitor", n => { IsWebsiteVisitor = n.GetBoolValue(); } },
                { "limit", n => { Limit = n.GetIntValue(); } },
                { "list_id", n => { ListId = n.GetGuidValue(); } },
                { "organization_user_ids", n => { OrganizationUserIds = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "queries", n => { Queries = n.GetCollectionOfObjectValues<global::Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List.ListPostRequestBody_queries>(global::Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List.ListPostRequestBody_queries.CreateFromDiscriminatorValue)?.AsList(); } },
                { "search", n => { Search = n.GetStringValue(); } },
                { "smart_view_id", n => { SmartViewId = n.GetGuidValue(); } },
                { "starting_after", n => { StartingAfter = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("campaign", Campaign);
            writer.WriteCollectionOfPrimitiveValues<string>("contacts", Contacts);
            writer.WriteBoolValue("distinct_contacts", DistinctContacts);
            writer.WriteDoubleValue("enrichment_status", EnrichmentStatus);
            writer.WriteEnumValue<global::Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List.ListPostRequestBody_esg_code>("esg_code", EsgCode);
            writer.WriteCollectionOfPrimitiveValues<Guid?>("excluded_ids", ExcludedIds);
            writer.WriteStringValue("filter", Filter);
            writer.WriteCollectionOfPrimitiveValues<Guid?>("ids", Ids);
            writer.WriteBoolValue("in_campaign", InCampaign);
            writer.WriteBoolValue("in_list", InList);
            writer.WriteBoolValue("is_website_visitor", IsWebsiteVisitor);
            writer.WriteIntValue("limit", Limit);
            writer.WriteGuidValue("list_id", ListId);
            writer.WriteCollectionOfPrimitiveValues<Guid?>("organization_user_ids", OrganizationUserIds);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Instantly.OpenApiClient.Api.V2.Leads.List.ListPostRequestBody_queries>("queries", Queries);
            writer.WriteStringValue("search", Search);
            writer.WriteGuidValue("smart_view_id", SmartViewId);
            writer.WriteStringValue("starting_after", StartingAfter);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
